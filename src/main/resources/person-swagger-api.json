{
	"swagger": "2.0",
	"info": {
		"description": "Api Documentation",
		"version": "1.0",
		"title": "Api Documentation",
		"termsOfService": "urn:tos",
		"contact": {
			
		},
		"license": {
			"name": "Apache 2.0",
			"url": "http://www.apache.org/licenses/LICENSE-2.0"
		}
	},
	"host": "localhost:8080",
	"basePath": "/",
	"tags": [
		{
			"name": "boot-controller",
			"description": "Boot Controller"
		}
	],
	"paths": {
		"/": {
			"get": {
				"tags": [
					"boot-controller"
				],
				"summary": "getHello",
				"operationId": "getHelloUsingGET",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Person"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			}
		},
		"/person": {
			"post": {
				"tags": [
					"boot-controller"
				],
				"summary": "addPerson",
				"operationId": "addPersonUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "post",
						"in": "body",
						"required": true,
						"schema": {
						  "$ref": "#/definitions/Person"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Person"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			}
		},
		"/person/{name}": {
			"get": {
				"tags": [
					"boot-controller"
				],
				"summary": "getPerson",
				"operationId": "getPersonUsingGET",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"description": "name",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Person"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			},
            "delete": {
                "tags": [
                    "boot-controller"
                ],
                "summary": "deletePerson",
                "operationId": "deletePersonUsingDELETE",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Person"
                        }
                    }
                }
            }
		},
		"/search": {
			"get": {
				"tags": [
					"boot-controller"
				],
				"summary": "searchByName",
				"operationId": "searchByNameUsingGET",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Person"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				},
				"deprecated": false
			}
		}
	},
	"definitions": {
		"Person": {
			"type": "object",
			"properties": {
				"age": {
					"type": "integer",
					"format": "int32"
				},
				"name": {
					"type": "string"
				}
			},
			"title": "Person"
		}
	}
}